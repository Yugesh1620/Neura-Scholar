---
- name: Add secrets
  hosts: node1,gpunode1
  become: yes
  vars_files:
    - ../.secrets/add_secrets.secrets.yml

  tasks:
    - name: Ensure mlflow namespace exists
      command: kubectl get namespace mlflow
      register: ns_check
      failed_when: false
      changed_when: false

    - name: Create mlflow namespace if missing
      when: ns_check.rc != 0
      command: kubectl create namespace mlflow 

    - name: check if mlflow secret exists
      command: kubectl get secret mlflow --namespace mlflow
      register: mlflow_secret_check
      failed_when: false
      changed_when: false

    - name: generate mlflow secret
      when: mlflow_secret_check.rc != 0
      command: >
        kubectl create secret generic mlflow 
          --from-literal=MLFLOW_BACKEND_STORE_URI={{ mlflow_backend_store_uri }}
          --from-literal=MLFLOW_FLASK_SERVER_SECRET_KEY={{ mlflow_flask_server_secret_key }}
          --namespace mlflow
      register: mlflow_secret_create


    - name: check if minio secret exists
      command: kubectl get secret minio --namespace mlflow
      register: minio_secret_check
      failed_when: false
      changed_when: false

    - name: generate minio secret
      when: minio_secret_check.rc != 0
      command: >
        kubectl create secret generic minio 
          --from-literal=MINIO_ROOT_USER={{ minio_root_user }}
          --from-literal=MINIO_ROOT_PASSWORD={{ minio_root_password }}
          --namespace mlflow
      register: minio_secret_create

    - name: check if jupyter secret exists
      command: kubectl get secret jupyter --namespace mlflow
      register: jupyter_secret_check
      failed_when: false
      changed_when: false

    - name: generate jupyter secret
      when: jupyter_secret_check.rc != 0
      command: >
        kubectl create secret generic jupyter 
          --from-literal=JUPYTER_TOKEN={{ jupyter_token }}
          --namespace mlflow
      register: jupyter_secret_create

    - name: check if postgres secret exists
      command: kubectl get secret postgres --namespace mlflow
      register: postgres_secret_check
      failed_when: false
      changed_when: false

    - name: generate postgres secret
      when: postgres_secret_check.rc != 0
      command: >
        kubectl create secret generic postgres 
          --from-literal=POSTGRES_USER={{ postgres_user }}
          --from-literal=POSTGRES_PASSWORD={{ postgres_password }}
          --namespace mlflow
      register: postgres_secret_create

    - name: Ensure csi-rclone namespace exists
      command: kubectl get namespace csi-rclone
      register: ns_check
      failed_when: false
      changed_when: false

    - name: Create csi-rclone namespace if missing
      when: ns_check.rc != 0
      command: kubectl create namespace csi-rclone 

    - name: check if csi-rclone secret exists
      command: kubectl get secret csi-rclone --namespace csi-rclone
      register: csi_rclone_secret_check
      failed_when: false
      changed_when: false
    
    - name: Copy csi-rclone.secrets.yaml to target node
      copy:
        src: ../.secrets/csi-rclone.secrets.yaml     
        dest: /tmp/csi-rclone.secrets.yaml    
      when: csi_rclone_secret_check.rc != 0

    - name: Apply the csi-rclone secret manifest
      command: kubectl apply -f /tmp/csi-rclone.secrets.yaml
      when: csi_rclone_secret_check.rc != 0

