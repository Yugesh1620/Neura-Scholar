version: '3.8'

volumes:
  project-22-raw-pdfs:

services:

  extract-data:
    container_name: etl_extract_data
    image: google/cloud-sdk:slim
    user: root
    volumes:
      - project-22-raw-pdfs:/data
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e

        echo "üîÑ Reset & prepare workspace‚Ä¶"
        rm -rf project-22-pdf-data
        mkdir -p project-22-pdf-data
        cd project-22-pdf-data

        echo "üìã Listing all PDF prefixes from GCS‚Ä¶"
        gsutil ls gs://arxiv-dataset/arxiv/arxiv/pdf > files_list.txt

        echo "‚úÖ Extract complete: see files_list.txt"

  process-data:
    container_name: etl_process_data
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    depends_on:
      - extract-data
    environment:
      - RCLONE_CONTAINER=${RCLONE_CONTAINER}
    volumes:
      - project-22-raw-pdfs:/data
      - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
    working_dir: /data/project-22-pdf-data
    entrypoint: [bash, -c]
    command: |
      set -e

      if [ -z "$RCLONE_CONTAINER" ]; then
        echo "ERROR: RCLONE_CONTAINER is not set"
        exit 1
      fi

      echo "üßπ Cleaning up existing contents of remote‚Ä¶"
      rclone delete chi_tacc:"$RCLONE_CONTAINER" --rmdirs || true

      echo "üìÅ Ensure remote folder exists: raw-pdf-data"
      rclone mkdir chi_tacc:"$RCLONE_CONTAINER/raw-pdf-data" || true

      echo
      echo "=== files_list.txt contents ==="
      cat files_list.txt
      echo "================================"
      echo

      # 110¬†GiB threshold
      max_bytes=$((110 * 1024**3))
      total_bytes=0

      while read -r prefix_uri; do
        # strip trailing slash & grab final segment
        uri_no_slash=${prefix_uri%/}
        name=${uri_no_slash##*/}

        echo "‚Ä¢ Processing $name (uri=$prefix_uri)‚Ä¶"

        mkdir -p "./$name"
        gsutil -m cp "${prefix_uri}"*.pdf "./$name/"

        tar czf "$name".tar.gz "$name"
        size=$(wc -c < "$name".tar.gz)

        if (( total_bytes + size > max_bytes )); then
          echo "‚ö†Ô∏è  Hit 110¬†GiB limit (current: $((total_bytes/1024**3))¬†GiB; next: $((size/1024**3))¬†GiB)."
          rm -rf "$name" "$name".tar.gz
          break
        fi

        total_bytes=$((total_bytes + size))
        echo "‚Üí Uploading $name.tar.gz (size: $((size/1024**3))¬†GiB)‚Ä¶"

        rclone copy "$name".tar.gz \
          chi_tacc:"$RCLONE_CONTAINER/raw-pdf-data" \
          --progress --transfers=16 --checkers=8 --fast-list

        rm -rf "$name" "$name".tar.gz
        echo "‚úî Done $name. Total uploaded: $((total_bytes/1024**3))¬†GiB."
      done < files_list.txt

      echo "üéâ All prefixes processed!"
