version: '3.8'
name: extract-raw-pdfs

volumes:
  project-22-raw-pdfs:

services:
  extract-data:
    container_name: etl_extract_data
    image: python:3.11
    user: root
    volumes:
      - project-22-raw-pdfs:/data
    working_dir: /data
    command:
      - bash
      - -c
      - |
        set -e

        echo "Reset & prepare workspace…"
        rm -rf project-22-pdf-data
        mkdir -p project-22-pdf-data
        cd project-22-pdf-data

        echo "Listing all PDF prefixes from GCS…"
        gsutil ls gs://arxiv-dataset/arxiv/arxiv/pdf > files_list.txt

        echo "Extract complete: see files_list.txt"
      
  process-data:
  #combines transform and load step for our kind of data
    container_name: etl_process_data
    image: python:3.11
    user: root
    depends_on:
      - extract-data
    environment:
      - RCLONE_CONTAINER=${RCLONE_CONTAINER}
    volumes:
      - project-22-raw-pdfs:/data
      - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
    working_dir: /data/project-22-pdf-data
    entrypoint: bash
    command:
      - -c
      - |
        set -e

        echo "Ensure remote folder exists: raw-pdf-data"
        rclone mkdir -p chi_tacc:"$RCLONE_CONTAINER/raw-pdf-data" || true

        echo "Starting per‑prefix ETL…"
        while read -r prefix_uri; do
          name=$(basename "$(dirname "$prefix_uri")")
          echo "    • Processing $name"

          # download
          gsutil -m cp -r "${prefix_uri}/*.pdf" ./"$name"/

          # tar
          tar czf "$name".tar.gz "$name"

          # push into raw-pdf-data folder
          echo "      → uploading $name.tar.gz → raw-pdf-data/"
          rclone copy "$name".tar.gz \
            chi_tacc:"$RCLONE_CONTAINER/raw-pdf-data" \
            --progress --transfers=16 --checkers=8 --fast-list

          # cleanup
          rm -rf "$name" "$name".tar.gz
          echo "      ✔ done $name (freed space)"
        done < files_list.txt

        echo "✔ All prefixes processed!"


  # transform-and-load-data:
  #   container_name: etl_transform_data
  #   image: python:3.11
  #   volumes:
  #     - food11:/data
  #   working_dir: /data/Food-11
  #   command:
  #     - bash
  #     - -c
  #     - |
  #       set -e

  #       python3 -c '
  #       import os
  #       import shutil

  #       dataset_base_dir = "/data/Food-11"
  #       subdirs = ["training", "validation", "evaluation"]
  #       classes = [
  #           "Bread", "Dairy product", "Dessert", "Egg", "Fried food",
  #           "Meat", "Noodles/Pasta", "Rice", "Seafood", "Soup", "Vegetable/Fruit"
  #       ]

  #       for subdir in subdirs:
  #           dir_path = os.path.join(dataset_base_dir, subdir)
  #           if not os.path.exists(dir_path):
  #               continue

  #           for i, class_name in enumerate(classes):
  #               class_dir = os.path.join(dir_path, f"class_{i:02d}")
  #               os.makedirs(class_dir, exist_ok=True)
  #               for f in os.listdir(dir_path):
  #                   if f.startswith(f"{i}_"):
  #                       shutil.move(
  #                           os.path.join(dir_path, f),
  #                           os.path.join(class_dir, f)
  #                       )
  #       '

  #       echo "Listing contents of /data/Food-11 after transform stage:"
  #       ls -l /data/Food-11

  # load-data:
  #   container_name: etl_load_data
  #   image: rclone/rclone:latest
  #   volumes:
  #     - food11:/data
  #     - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro
  #   entrypoint: /bin/sh
  #   command:
  #     - -c
  #     - |
  #       if [ -z "$RCLONE_CONTAINER" ]; then
  #         echo "ERROR: RCLONE_CONTAINER is not set"
  #         exit 1
  #       fi
  #       echo "Cleaning up existing contents of container..."
  #       rclone delete chi_tacc:$RCLONE_CONTAINER --rmdirs || true

  #       rclone copy /data/Food-11 chi_tacc:$RCLONE_CONTAINER \
  #       --progress \
  #       --transfers=32 \
  #       --checkers=16 \
  #       --multi-thread-streams=4 \
  #       --fast-list

  #       echo "Listing directories in container after load stage:"
  #       rclone lsd chi_tacc:$RCLONE_CONTAINER