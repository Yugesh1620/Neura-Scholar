apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus
  namespace: mlflow 
  labels:
    app: prometheus
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - node1
  hostPath:
    path: /mnt/block/prometheus
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus
  namespace: mlflow 
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: manual
  selector:
    matchLabels:
      app: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: mlflow
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
          volumeMounts:
            - name: config-file
              mountPath: /etc/prometheus
            - name: block-store
              mountPath: /prometheus
      volumes:
        - name: config-file
          configMap:
            name: prometheus
        - name: block-store
          persistentVolumeClaim:
            claimName: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: mlflow
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  externalIPs:
    - {{ .Values.global.externalIP }}
